[{"/home/matteo/Projects/Epitech/EIP/client/src/reportWebVitals.js":"1","/home/matteo/Projects/Epitech/EIP/client/src/index.js":"2","/home/matteo/Projects/Epitech/EIP/client/src/components/HeaderBar.tsx":"3","/home/matteo/Projects/Epitech/EIP/client/src/components/App.tsx":"4","/home/matteo/Projects/Epitech/EIP/client/src/utils/theme.js":"5","/home/matteo/Projects/Epitech/EIP/client/src/components/ServerListMenu.tsx":"6","/home/matteo/Projects/Epitech/EIP/client/src/components/AudioBar.tsx":"7","/home/matteo/Projects/Epitech/EIP/client/src/components/AlbumPaper.tsx":"8","/home/matteo/Projects/Epitech/EIP/client/src/components/AlbumsDisplayer.tsx":"9"},{"size":362,"mtime":1606837478375,"results":"10","hashOfConfig":"11"},{"size":708,"mtime":1606842408718,"results":"12","hashOfConfig":"11"},{"size":2127,"mtime":1607004808060,"results":"13","hashOfConfig":"11"},{"size":2494,"mtime":1607526788313,"results":"14","hashOfConfig":"11"},{"size":302,"mtime":1607528014267,"results":"15","hashOfConfig":"11"},{"size":2899,"mtime":1607004531856,"results":"16","hashOfConfig":"11"},{"size":598,"mtime":1607520380954,"results":"17","hashOfConfig":"11"},{"size":3709,"mtime":1607533479293,"results":"18","hashOfConfig":"11"},{"size":5215,"mtime":1607531661657,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1b202dj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/matteo/Projects/Epitech/EIP/client/src/reportWebVitals.js",[],["44","45"],"/home/matteo/Projects/Epitech/EIP/client/src/index.js",[],["46","47"],"/home/matteo/Projects/Epitech/EIP/client/src/components/HeaderBar.tsx",[],["48","49"],"/home/matteo/Projects/Epitech/EIP/client/src/components/App.tsx",["50","51"],"/home/matteo/Projects/Epitech/EIP/client/src/utils/theme.js",[],"/home/matteo/Projects/Epitech/EIP/client/src/components/ServerListMenu.tsx",["52","53"],"import React from 'react'\nimport {\n    Drawer,\n    Divider,\n    List,\n    ListItemText,\n    ListItem,\n    ListItemIcon,\n    IconButton,\n    Theme\n} from '@material-ui/core'\nimport { createStyles, makeStyles, useTheme} from '@material-ui/styles'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport clsx from 'clsx'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n}))\n\ntype ServerListMenuProps = {\n    open: boolean,\n    serverList: string[],\n    setServerListMenuDisplayed: (event: React.MouseEvent<HTMLButtonElement>) => void\n}\n\nexport default function ServerListMenu(props: ServerListMenuProps) {\n    const { open, serverList, setServerListMenuDisplayed } = props\n    const classes = useStyles()\n    const theme = useTheme()\n\n    return (\n        <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={setServerListMenuDisplayed}>\n                    <ChevronLeftIcon/>\n                </IconButton>\n            </div>\n            <Divider/>\n            <List>\n                {\n                    serverList.map((serverName: String, index) => (\n                        <ListItem button key={index}>\n                            <ListItemIcon>\n                                <InboxIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={serverName} />\n                        </ListItem>\n                    ))\n                }\n            </List>\n        </Drawer>\n    )\n}\n",["54","55"],"/home/matteo/Projects/Epitech/EIP/client/src/components/AudioBar.tsx",[],["56","57"],"/home/matteo/Projects/Epitech/EIP/client/src/components/AlbumPaper.tsx",["58","59"],"/home/matteo/Projects/Epitech/EIP/client/src/components/AlbumsDisplayer.tsx",["60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":16},{"ruleId":"68","severity":1,"message":"72","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":23},{"ruleId":"68","severity":1,"message":"73","line":15,"column":8,"nodeType":"70","messageId":"71","endLine":15,"endColumn":24},{"ruleId":"68","severity":1,"message":"74","line":63,"column":11,"nodeType":"70","messageId":"71","endLine":63,"endColumn":16},{"ruleId":"62","replacedBy":"75"},{"ruleId":"64","replacedBy":"76"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"77","line":4,"column":5,"nodeType":"70","messageId":"71","endLine":4,"endColumn":9},{"ruleId":"68","severity":1,"message":"78","line":9,"column":5,"nodeType":"70","messageId":"71","endLine":9,"endColumn":18},{"ruleId":"68","severity":1,"message":"79","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"80","line":230,"column":6,"nodeType":"70","messageId":"71","endLine":230,"endColumn":21},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"@typescript-eslint/no-unused-vars","'AudioBar' is defined but never used.","Identifier","unusedVar","'AlbumsDisplayer' is defined but never used.","'ChevronRightIcon' is defined but never used.","'theme' is assigned a value but never used.",["81"],["82"],"'List' is defined but never used.","'ListSubheader' is defined but never used.","'useState' is defined but never used.","'AlbumPaperProps' is defined but never used.","no-global-assign","no-unsafe-negation"]