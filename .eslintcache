[{"/home/matteo/Projects/Epitech/EIP/client/src/index.js":"1","/home/matteo/Projects/Epitech/EIP/client/src/components/HeaderBar.tsx":"2","/home/matteo/Projects/Epitech/EIP/client/src/components/AlbumPaper.tsx":"3","/home/matteo/Projects/Epitech/EIP/client/src/components/App.tsx":"4","/home/matteo/Projects/Epitech/EIP/client/src/utils/theme.js":"5","/home/matteo/Projects/Epitech/EIP/client/src/utils/secondConverter.ts":"6","/home/matteo/Projects/Epitech/EIP/client/src/reportWebVitals.js":"7","/home/matteo/Projects/Epitech/EIP/client/src/components/AudioBar.tsx":"8","/home/matteo/Projects/Epitech/EIP/client/src/components/ServerListMenu.tsx":"9","/home/matteo/Projects/Epitech/EIP/client/src/components/FakeAlbumPaper.tsx":"10","/home/matteo/Projects/Epitech/EIP/client/src/containers/FakeAlbumPaperContainer.tsx":"11"},{"size":708,"mtime":1606842408718,"results":"12","hashOfConfig":"13"},{"size":2127,"mtime":1607004808060,"results":"14","hashOfConfig":"13"},{"size":3748,"mtime":1607686398068,"results":"15","hashOfConfig":"13"},{"size":2854,"mtime":1607687078445,"results":"16","hashOfConfig":"13"},{"size":302,"mtime":1607528014267,"results":"17","hashOfConfig":"13"},{"size":953,"mtime":1607536118594,"results":"18","hashOfConfig":"13"},{"size":362,"mtime":1606837478375,"results":"19","hashOfConfig":"13"},{"size":640,"mtime":1607687047058,"results":"20","hashOfConfig":"13"},{"size":2839,"mtime":1607537861495,"results":"21","hashOfConfig":"13"},{"size":4038,"mtime":1607687130940,"results":"22","hashOfConfig":"13"},{"size":1292,"mtime":1607686238357,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1b202dj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"/home/matteo/Projects/Epitech/EIP/client/src/index.js",[],["52","53"],"/home/matteo/Projects/Epitech/EIP/client/src/components/HeaderBar.tsx",[],["54","55"],"/home/matteo/Projects/Epitech/EIP/client/src/components/AlbumPaper.tsx",["56"],"/home/matteo/Projects/Epitech/EIP/client/src/components/App.tsx",["57"],"/home/matteo/Projects/Epitech/EIP/client/src/utils/theme.js",[],"/home/matteo/Projects/Epitech/EIP/client/src/utils/secondConverter.ts",[],"/home/matteo/Projects/Epitech/EIP/client/src/reportWebVitals.js",[],["58","59"],"/home/matteo/Projects/Epitech/EIP/client/src/components/AudioBar.tsx",["60"],"import React from 'react'\nimport {\n    createMuiTheme, \n    ThemeProvider\n} from '@material-ui/core'\nimport AudioPlayer from 'material-ui-audio-player';\n\nconst muiTheme = createMuiTheme({});\n\nconst src = [\n    'http://localhost:5000/play/1',\n];\n\ntype AudioBarProps = {\n    url: string\n}\n\nexport default function AudioBar(props: AudioBarProps) {\n    const { url } = props\n    return (\n        <ThemeProvider theme={muiTheme}>\n            <AudioPlayer \n                src={url}\n                width=\"500px\"\n                loop={true}\n                spacing={3}\n                elevation={3}\n            />\n        </ThemeProvider>\n    )\n}","/home/matteo/Projects/Epitech/EIP/client/src/components/ServerListMenu.tsx",["61"],"import React from 'react'\nimport {\n    Drawer,\n    Divider,\n    List,\n    ListItemText,\n    ListItem,\n    ListItemIcon,\n    IconButton,\n    Theme\n} from '@material-ui/core'\nimport { createStyles, makeStyles, useTheme} from '@material-ui/styles'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport clsx from 'clsx'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n}))\n\ntype ServerListMenuProps = {\n    open: boolean,\n    serverList: string[],\n    setServerListMenuDisplayed: (event: React.MouseEvent<HTMLButtonElement>) => void\n}\n\nexport default function ServerListMenu(props: ServerListMenuProps) {\n    const { open, serverList, setServerListMenuDisplayed } = props\n    const classes = useStyles()\n    // const theme = useTheme()\n\n    return (\n        <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={setServerListMenuDisplayed}>\n                    <ChevronLeftIcon/>\n                </IconButton>\n            </div>\n            <Divider/>\n            <List>\n                {\n                    serverList.map((serverName: String, index) => (\n                        <ListItem button key={index}>\n                            <ListItemIcon>\n                                <InboxIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={serverName} />\n                        </ListItem>\n                    ))\n                }\n            </List>\n        </Drawer>\n    )\n}\n","/home/matteo/Projects/Epitech/EIP/client/src/components/FakeAlbumPaper.tsx",["62","63"],"/home/matteo/Projects/Epitech/EIP/client/src/containers/FakeAlbumPaperContainer.tsx",["64"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport FakeAlbumPaper from '../components/FakeAlbumPaper'\n\ntype FakeAlbumPaperContainerProps = {\n    setCurrentMusic: Function\n}\n\ntype FakeMusic = {\n    author: string,\n    genre: string,\n    id: number,\n    link: string,\n    title: string\n}\n\ntype FakeAlbumPaperContainerStates = {\n    musicList: FakeMusic[]\n}\n\nexport default class FakeAlbumPaperContainer extends Component<FakeAlbumPaperContainerProps, FakeAlbumPaperContainerStates> {\n    constructor(props: FakeAlbumPaperContainerProps) {\n        super(props)\n        this.state = {\n            musicList: []\n        }\n        this.getMusicList = this.getMusicList.bind(this)\n    }\n\n    getMusicList() {\n        fetch(`http://localhost:5000/musics`)\n        .then(response => response.json())\n        .then(json => {\n            this.setState({\n                musicList: json\n            })\n        })\n    }\n\n    componentDidMount() {\n        console.log(\"bah salut\")\n        this.getMusicList()\n    }\n    render() {\n        const { setCurrentMusic } = this.props\n        const { musicList } = this.state\n        return (\n            <FakeAlbumPaper\n                setCurrentMusic={setCurrentMusic}\n                musicList={musicList}\n            />\n        )\n    }\n}",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":20,"column":5,"nodeType":"71","messageId":"72","endLine":20,"endColumn":14},{"ruleId":"69","severity":1,"message":"73","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":23},{"ruleId":"65","replacedBy":"74"},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","severity":1,"message":"76","line":10,"column":7,"nodeType":"71","messageId":"72","endLine":10,"endColumn":10},{"ruleId":"69","severity":1,"message":"77","line":12,"column":36,"nodeType":"71","messageId":"72","endLine":12,"endColumn":44},{"ruleId":"69","severity":1,"message":"70","line":20,"column":5,"nodeType":"71","messageId":"72","endLine":20,"endColumn":14},{"ruleId":"69","severity":1,"message":"78","line":23,"column":8,"nodeType":"71","messageId":"72","endLine":23,"endColumn":23},{"ruleId":"69","severity":1,"message":"79","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":13},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'PlayArrow' is defined but never used.","Identifier","unusedVar","'AlbumsDisplayer' is defined but never used.",["80"],["81"],"'src' is assigned a value but never used.","'useTheme' is defined but never used.","'secondConverter' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]